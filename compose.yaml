services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: carfactory-factories-mssql
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${DB_PASSWORD}
      - MSSQL_PID=Express
    ports:
      - "${DB_PORT}:${DB_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "timeout 1 bash -c '</dev/tcp/localhost/${DB_PORT}' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - carfactory-factories-network
  
  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    restart: always
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - ${RABBITMQ_PORT_MANAGEMENT}:${RABBITMQ_PORT_MANAGEMENT}
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    configs:
      - source: rabbitmq-plugins
        target: /etc/rabbitmq/enabled_plugins
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq
    networks:
      - carfactory-factories-network

  mssql-init:
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      mssql:
        condition: service_healthy
    environment:
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_USERNAME=${DB_USERNAME}
    volumes:
      - ./init-db.sh:/init-db.sh
    entrypoint: ["/bin/bash", "-c", "chmod +x /init-db.sh && /init-db.sh"]
    networks:
      - carfactory-factories-network

  nestjs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: carfactory-factories-api
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - DB_HOST=mssql
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - RABBITMQ_SERVICE_NAME=rabbitmq
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_FACTORIES_QUEUE=${RABBITMQ_FACTORIES_QUEUE}
    depends_on:
      mssql-init:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
    networks:
      - carfactory-factories-network

networks:
  carfactory-factories-network:
    driver: bridge

configs:
  rabbitmq-plugins:
    content: "[rabbitmq_management]."  

volumes:
  rabbitmq-lib:
    driver: local
  rabbitmq-log:
    driver: local
